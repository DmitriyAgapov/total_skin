// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Role {
  id               String  @id @default(cuid())
  name             String  @default("")
  canManageContent Boolean @default(false)
  canManageUsers   Boolean @default(false)
  users            User[]  @relation("User_role")
}

model User {
  id               String  @id @default(cuid())
  name             String  @default("")
  email            String  @unique @default("")
  password         String
  role             Role?   @relation("User_role", fields: [roleId], references: [id])
  roleId           String? @map("role")
  address          String  @default("")
  phone            String  @default("")
  instagram        String  @default("")
  facebook         String  @default("")
  linkedin         String  @default("")
  emailContacts    String  @default("")
  from_Post_author Post[]  @relation("Post_author")

  @@index([roleId])
}

model Callback {
  id            String    @id @default(cuid())
  name          String    @default("")
  email         String    @default("")
  phone         String    @default("")
  publishedDate DateTime? @default(now())
  message       String    @default("")
}

model Tag {
  id            String @id @default(cuid())
  title         String @default("")
  from_Post_tag Post[] @relation("Post_tag")
}

model Post {
  id              String    @id @default(cuid())
  order           Int?
  title           String    @default("")
  slug            String    @unique @default("")
  status          String?   @default("draft")
  date            DateTime?
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_mode      String?
  image_id        String?
  content         Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  tag             Tag[]     @relation("Post_tag")
  author          User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId        String?   @map("author")

  @@index([authorId])
}